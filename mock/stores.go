// Code generated by MockGen. DO NOT EDIT.
// Source: monkey/domain (interfaces: MonkeyStore)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	domain "monkey/domain"
	reflect "reflect"
)

// MockMonkeyStore is a mock of MonkeyStore interface
type MockMonkeyStore struct {
	ctrl     *gomock.Controller
	recorder *MockMonkeyStoreMockRecorder
}

// MockMonkeyStoreMockRecorder is the mock recorder for MockMonkeyStore
type MockMonkeyStoreMockRecorder struct {
	mock *MockMonkeyStore
}

// NewMockMonkeyStore creates a new mock instance
func NewMockMonkeyStore(ctrl *gomock.Controller) *MockMonkeyStore {
	mock := &MockMonkeyStore{ctrl: ctrl}
	mock.recorder = &MockMonkeyStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMonkeyStore) EXPECT() *MockMonkeyStoreMockRecorder {
	return m.recorder
}

// ListMonkeys mocks base method
func (m *MockMonkeyStore) ListMonkeys() ([]*domain.Monkey, error) {
	ret := m.ctrl.Call(m, "ListMonkeys")
	ret0, _ := ret[0].([]*domain.Monkey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMonkeys indicates an expected call of ListMonkeys
func (mr *MockMonkeyStoreMockRecorder) ListMonkeys() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMonkeys", reflect.TypeOf((*MockMonkeyStore)(nil).ListMonkeys))
}

// RetrieveMonkey mocks base method
func (m *MockMonkeyStore) RetrieveMonkey(arg0 string) (*domain.Monkey, error) {
	ret := m.ctrl.Call(m, "RetrieveMonkey", arg0)
	ret0, _ := ret[0].(*domain.Monkey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveMonkey indicates an expected call of RetrieveMonkey
func (mr *MockMonkeyStoreMockRecorder) RetrieveMonkey(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveMonkey", reflect.TypeOf((*MockMonkeyStore)(nil).RetrieveMonkey), arg0)
}
